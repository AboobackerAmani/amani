<?php

/**
 * @file
 * Install function for the amani profile.
 */
 
/**
 * Minimum recommended value of PHP memory_limit for amani.
 */
define('AMANI_MINIMUM_PHP_MEMORY_LIMIT', '128M');

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 */
function amani_install() {
  $t = get_t();
  theme_enable(array('amani_zen'));
  variable_set('theme_default', 'amani_zen');
  $admin_theme = 'seven';

  // Create a default role for site administrators, with all available permissions assigned.
  if (!$admin_role = user_role_load_by_name('administrator')) {
    $admin_role = new stdClass();
    $admin_role->name = 'administrator';
    user_role_save($admin_role);
  }
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();

  // Enable the admin theme, fusion engine, and the default theme.
  $themes = array($admin_theme, 'fusion_core');
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', $themes, 'IN')
    ->execute();
  variable_set('admin_theme', $admin_theme);
  variable_set('node_admin_theme', '1');
}

/**
 * Implements hook_requirements().
 */
function amani_requirements($phase) {
  $requirements = array();

  $t = get_t();

  // Check the current memory limit. If it is set too low and many
  // amani apps are enabled, page loads at certain paths may fail and
  // throw a fatal error.
  $memory_limit = ini_get('memory_limit');
  if (!amani_check_memory_limit(AMANI_MINIMUM_PHP_MEMORY_LIMIT, $memory_limit)) {
    $requirements['php_memory_limit']['severity'] = REQUIREMENT_WARNING;
    $requirements['php_memory_limit']['description'] = $t('The recommended PHP memory limit for running Amani is at least %memory_minimum_limit. The current value is %memory_limit. <a href="@limit_url">Follow these steps to increase the PHP memory limit</a>. Alternately, if you are using a commercial host, you may wish to switch to a host that better supports Drupal and Amani. See the <a href="@hosting_url">Open Outreach hosting listings</a> for some options.', array('%memory_limit' => $memory_limit, '%memory_minimum_limit' => AMANI_MINIMUM_PHP_MEMORY_LIMIT, '@limit_url' => 'http://drupal.org/node/207036', '@hosting_url' => 'http://openoutreach.org/hosting'));
  }

  return $requirements;
}

/**
 * Compares the memory required for an operation to the available memory.
 *
 * @todo: use drupal_check_memory_limit() when upgrading to Drupal 8.
 *
 * @param $required
 *   The memory required for the operation, expressed as a number of bytes with
 *   optional SI or IEC binary unit prefix (e.g. 2, 3K, 5MB, 10G, 6GiB, 8bytes,
 *   9mbytes).
 * @param $memory_limit
 *   (optional) The memory limit for the operation, expressed as a number of
 *   bytes with optional SI or IEC binary unit prefix (e.g. 2, 3K, 5MB, 10G,
 *   6GiB, 8bytes, 9mbytes). If no value is passed, the current PHP
 *   memory_limit will be used. Defaults to NULL.
 *
 * @return
 *   TRUE if there is sufficient memory to allow the operation, or FALSE
 *   otherwise.
 */
function amani_check_memory_limit($required, $memory_limit = NULL) {
  if (!isset($memory_limit)) {
    $memory_limit = ini_get('memory_limit');
  }

  // There is sufficient memory if:
  // - No memory limit is set.
  // - The memory limit is set to unlimited (-1).
  // - The memory limit is greater than or equal to the memory required for
  //   the operation.
  return ((!$memory_limit) || ($memory_limit == -1) || (parse_size($memory_limit) >= parse_size($required)));
}
