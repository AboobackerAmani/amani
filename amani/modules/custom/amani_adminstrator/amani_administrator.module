<?php

require_once('amani_administrator.admin.inc');

/**
 * Implements hook_menu.
 */
function amani_administrator_menu() {
  $items = array();
  $items['admin/configure-amani'] = array(
    'title' => 'Configure amani',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('amani_administrator_configure_amani_form'),
    'access arguments' => array('access amani administrator'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'amani_administrator.admin.inc'
  );

  $items['admin/configure-amani/newsletter-button'] = array(
    'title' => 'Configure Newsletter Button',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('amani_administrator_configure_newsletter_button_form'),
    'access arguments' => array('access amani administrator'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'amani_administrator.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_permission.
 */
function amani_administrator_permission() {
  return array(
    'access amani administrator' => array(
      'title' => t('Access amani administrator page'),
      'description' => t('Perform administrative tasks for various amani components.'),
    ),
  );
}

/**
 * Sets a specified block in a region, this only sets blocks for the peace theme.
 *
 * @param $block - an array representing the block, necessary keys are module,
 * delta and theme.
 * @param $status - the status of the block 0 = disabled, 1 = enabled
 * @param $weight - the blocks weight
 * @param $region - the blocks region a value of -1 will disable the block
 */
function amani_administrator_set_block(array $block, $status, $weight, $region) {
   db_update('block')
    ->fields(array(
      'status' => $status,
      'weight' => $weight,
      'region' => $region,
    ))
    ->condition('module', $block['module'])
    ->condition('delta', $block['delta'])
    ->condition('theme', 'peace')
    ->execute();
  // Flush cache
  cache_clear_all();
}

/**
 * Creates menu links for menu-social-media, menu-amani-main-menu and
 * menu-donate.
 */
function amani_administrator_create_menu_links($menu_machine_name) {
  $default_links = array();
  switch($menu_machine_name) {
    case 'menu-social-media':
      $default_links = amani_administrator_get_media_links();
      break;
    case 'menu-amani-main-menu':
      $default_links = amani_administrator_get_main_menu_links();
      break;
    case 'menu-donate':
      $default_links = amani_administrator_get_donate_menu_links();
      break;
    default: return;
  }
  $current_menu_links = array();
  // We will have to consider the link title the unique identifier for the link
  // in this menu. If a link with the same title already exists we wont be
  // adding the corresponding default value.
  foreach (menu_load_links($menu_machine_name) as $link) {
    $current_menu_links[] = $link['link_title'];
  }
  foreach ($default_links as $title => $path) {
    if (!in_array($title, $current_menu_links)) {
      $link = array('link_path' => $path,'link_title' => $title,'menu_name' => $menu_machine_name);
      menu_link_save($link);
    }
  }

  menu_cache_clear_all();
}

function amani_administrator_get_media_links() {
  if (module_exists('amani_social_media')) {
    return array(
      'Twitter' => 'http://twitter.com',
      'Facebook' => 'http://facebook.com',
      'LinkedIn' => 'http://linkedin.com',
      'Pinterest' => 'http://pinterest.com',
      'Rss' => 'http://google.com',
      'Vimeo' => 'http://vimeo.com',
      'YouTube' => 'http://youtube.com',
      'Google+' => 'https://plus.google.com',
    );
  }

  return array();
}

function amani_administrator_get_main_menu_links() {
  $links = array();
  // Checking if the module exists is not entirely necessary
  // drupal will not create a link to path that doenst exist.
  if (module_exists('amani_about')) {
    $links['About'] = 'about';
  }
  if (module_exists('amani_team')) {
    $links['Team'] = 'team';
  }
  if (module_exists('amani_media_gallery')) {
    $links['Image Gallery'] = 'gallery';
  }
  if (module_exists('amani_partners')) {
    $links['Partners'] = 'partners';
  }
  if (module_exists('amani_programs_campaigns')) {
    $links['Programs'] = 'programs';
  }
  if (module_exists('amani_get_involved')) {
    $links['Get Involved'] = 'get-involved';
  }
  if (module_exists('amani_resource')) {
    $links['Resources'] = 'resources';
  }
  if (module_exists('amani_incident_report')) {
    $links['Map'] = 'incident-reports';
  }
  if (module_exists('amani_block_and_views')) {
    $links['News & Events'] = 'news-and-events';
  }
  if (module_exists('amani_blog')) {
    $links['Blog'] = 'blog';
  }
  if (module_exists('contact')) {
    $links['Contact'] = 'contact';
  }
  return $links;
}

function amani_administrator_get_donate_menu_links() {
  return array(
    'Donate' => '<front>'
  );
}
