<?php
/**
 * @file
 * Code for the amani_service_advisor_source_provider feature.
 */

include_once 'amani_service_advisor_source_provider.features.inc';

/**
 * Implements hook_block_info().
 */
function amani_service_advisor_source_provider_block_info() {
  $blocks = array();
  $blocks['services_links'] = array(
    'info' => t('Services Links'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function amani_service_advisor_source_provider_block_view($delta='') {
  $block = array();

  switch($delta) {
    case 'services_links' :
      $block['content'] = amani_service_advisor_source_provider_services_links();
      break;
  }

  return $block;
}

function amani_service_advisor_source_provider_services_links(){

  $node = menu_get_object();

  $variables = array(
    'items' => array(),
    // Leave the title element empty to omit the title.
    'title' => '',
    'type' => 'ul',
    'attributes' => array(),
  );
  $variables['items'][] = l(t('Add a new location'), '/node/add/service-location', array('query' => array('og_group_ref' => $node->nid)));
  return theme('item_list', $variables);

}

/*
 * Implementation of hook_node_insert()
 */

function amani_service_advisor_source_provider_node_insert($node) {

  // Create the Arabic translation at the same time that we save the English.

  if ($node->type == 'service_location' && $node->language == 'en' && $node->tnid == 0){
    $node->tnid = $node->nid;

    $translation_source = new stdClass();
    $node->translation_source->tnid = $node->nid;
    $arabic_node = clone $node;
    // unset version and node id's
    unset($arabic_node->nid);
    unset($arabic_node->vid);
    unset($arabic_node->path);

    $arabic_node->language = 'ar';

    // Save the copy
    node_save($arabic_node);

  }
}
