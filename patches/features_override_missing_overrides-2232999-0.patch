diff --git a/features_override.export.inc b/features_override.export.inc
index c7dc404..4b7ce59 100644
--- a/features_override.export.inc
+++ b/features_override.export.inc
@@ -65,7 +65,7 @@ function features_get_ignore_keys($component) {
 }
 
 /**
- * Calculautes what overrides exist for by component/element.
+ * Calculates what overrides exist for by component/element.
  *
  * @param $component_key
  *   A component key that's defined via hook_features_api.
@@ -107,6 +107,35 @@ function features_override_get_overrides($component_key = FALSE, $element_key =
   return $cache;
 }
 
+/**
+ * Helper function in determining equality of arrays. Credit to http://stackoverflow.com/a/4263181
+ *
+ * @see _features_override_remove_recursion()
+ *
+ * @param $a
+ *  object a
+ * @param $b
+ *  object b
+ * @return bool
+ *  
+ */
+function _features_override_is_ref_to(&$a, &$b, $uniqid) {
+  if (is_object($a) && is_object($b)) {
+    return ($a === $b);
+  }
+
+  $temp_a = $a;
+  $temp_b = $b;
+
+  $b = $uniqid;
+
+  if ($a === $uniqid) $return = true;
+  else $return = false;
+
+  $a = $temp_a;
+  $b = $temp_b;
+  return $return;
+}
 
 /**
  * Get overrides for specific module/component.
@@ -368,7 +397,9 @@ function features_override_export_keys($keys) {
  *   An object or array passed by reference.
  */
 function features_override_remove_recursion(&$item) {
-  _features_override_remove_recursion($item);
+  $uniqid = __FUNCTION__ . mt_rand(); // use of uniqid() here impacts performance
+  $stack = array();
+  _features_override_remove_recursion($item, $stack, $uniqid);
 }
 
 /**
@@ -377,22 +408,28 @@ function features_override_remove_recursion(&$item) {
  * @param $item
  *   An object or array passed by reference.
  */
-function _features_override_remove_recursion(&$object, &$stack = array()) {
+function _features_override_remove_recursion(&$object, &$stack = array(), $uniqid) {
   if ((is_object($object) || is_array($object)) && $object) {
-    if (!in_array($object, $stack, true)) {
+    $in_stack = FALSE;
+    foreach($stack as &$item) {
+      if(_features_override_is_ref_to($object, $item, $uniqid)) {
+        $in_stack = TRUE;
+        break;
+      }
+    }
+    if(!$in_stack) {
       $stack[] = $object;
       foreach ($object as $key => &$subobject) {
-        if (_features_override_remove_recursion($subobject, $stack)) {
+        if (_features_override_remove_recursion($subobject, $stack, $uniqid)) {
           if (is_object($object)) {
             unset($object->$key);
-        }
-        else {
+          }
+          else {
             unset($object[$key]);
-    }
-  }
-}
+          }
+        }
       }
-      else {
+    } else {
       return TRUE;
     }
   }
